//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.18052
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using UnityEngine;

namespace Library
{
	public class Scaling : MonoBehaviour
	{
		[SerializeField] float scaleSpeed = 10f;
		Vector2 startTouchPosition = Vector3.zero;
		Vector3 currentScale = Vector3.zero;

		void Start()
		{
			currentScale = transform.localScale;
		}

		void Update()
		{
			if(Input.touchCount > 0)
			{
				Touch touch = Input.touches[0];

				switch(touch.phase)
				{
					case TouchPhase.Began:
					{
						startTouchPosition = touch.position;
						break;
					}
					case TouchPhase.Ended: 
					{

						Vector3 localScale = transform.localScale;
						Vector2 direction = touch.position - startTouchPosition;
						float distance = direction.magnitude;

						direction.Normalize();
						direction.x = Mathf.Abs(direction.x);
						direction.y = Mathf.Abs(direction.y);

						currentScale =  ClampScale(direction,distance,localScale);
						transform.localScale = currentScale;
						break;
					}
				}
			}

			//float speed = Time.deltaTime * scaleSpeed;
			//transform.localScale = Vector3.Lerp(transform.localScale,currentScale,speed);
		}

		Vector3 ClampScale(Vector3 direction,float distance,Vector3 localScale)
		{
			int slideFactor = 4;
			float min = 0.5f;
			float max = 2.0f;
			float normal = 1.0f;
			PlayerMovement movement = GetComponent<PlayerMovement>();

			if(direction.x > direction.y)
			{
				if(distance >= Screen.width/slideFactor)
				{
					if(localScale.y > normal)
					{
						localScale.x = normal;
						localScale.y = normal;
					}
					else if(localScale.x > normal)
					{
						localScale.x = normal;
						localScale.y = normal;
					}
					else
					{
						localScale.x = max;
						localScale.y = min;
					}
				}
			}
			else
			{
				if(distance >= Screen.height/slideFactor)
				{
					if(localScale.x > normal)
					{
						localScale.x = normal;
						localScale.y = normal;
					}
					else if(localScale.y > normal)
					{
						localScale.x = normal;
						localScale.y = normal;
					}
					else
					{
						localScale.x = min;
						localScale.y = max;
					}
				}
			}
			return localScale * movement.GetMoveDirection().x;
		}


	}
}

